#####################################
#  Real-time LiDAR SLAM parameters  #
#####################################

## Number of vertical lasers in LiDAR sensor (optional : if not given, it will be guessed from 1st frame)
# n_lasers: 16

## Mapping from ring id to laser id (optional, default : identity mapping)
# laser_id_mapping: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

# SLAM will publish the TF slam_origin_frame -> slam_output_frame.
slam_origin_frame: "slam_init"   # Frame id of SLAM map origin.
# slam_output_frame: "velodyne"  # Frame id of the current SLAM pose (default : use frame_id of the input pointcloud).

# [Hz] Number of frames per second acquired by the LiDAR sensor (used to generate approximate point-wise timestamp)
lidar_frequency: 10.

# Verbosity level :
#  0) print errors, warnings or one time info
#  1) 0 + frame number, total frame processing time
#  2) 1 + extracted features, used keypoints, mapping variance, ego-motion and localization summary
#  3) 2 + sub-problems processing duration
#  4) 3 + ceres optimization summary
verbosity: 3

# Optional publishers
publish_features_maps:
  edges: true     # if true, edges features will be published to topic "edges_features"
  planars: true   # if true, planars features will be published to topic "planars_features"
  blobs: true     # if true, blobs features will be published to topic "blobs_features"

# Optionnal GPS-like pose publication
gps:

  # Optionnal publication of slam pose centered on GPS antenna instead of LiDAR sensor.
  output_gps_pose: false            # Outputs GPS antenna pose instead of LiDAR's.
  output_gps_pose_frame_id: "slam"  # Frame id of the GPS antenna pose computed by SLAM if output_gps_pose=true (overrides slam_output_frame).
  gps_to_lidar_offset: [0., 0., 0., 0., 0., 0.]  # Pose (X, Y, Z, roll, pitch, yaw) of the LiDAR in GPS antenna coordinates  (also help to estimate a better calibration).

  # Optionnal use of GPS data to calibrate output SLAM pose to world coordinates.
  # It requires GPS pose published on 'gps_odom' topic as a nav_msgs/Odometry message.
  # GPS/SLAM calibration can be triggered by publishing 'run_gps_slam_calibration' topic.
  calibration:
    enable: false      # If true, subscribe to gps topic 'gps_odom', try to fit GPS trajectory to SLAM trajectory, and publish static TF to link 'gps_odom/header/frame_id' to 'slam_origin_frame' (WARNING Can be overridden in slam.launch with 'gps' arg).
    pose_timeout: 20.  # [s] GPS/SLAM poses older than that are forgotten and not used for calibration.
    no_roll: false                   # If true, impose calibration to have no pitch rotation. DEBUG
    publish_icp_trajectories: true   # If true, publish ICP-aligned GPS and SLAM trajectories to 'icp_gps' and 'icp_slam' latched topics.

# SLAM parameters (see Slam.h for description). Comment parameter to get default value.
slam:

  fast_slam: true      # Use only planars keypoints used during EgoMotion for Mapping step, and not all.
  undistortion: false  # Undistord the frame to correct rolling shutter distortion. DEBUG

  # Optionnal logging of computed pose, mapping covariance and keypoints of each processed frame.
  #  - A value of 0. will disable logging.
  #  - A negative value will log all incoming data, without any timeout.
  #  - A positive value will keep only most recent data, forgetting all previous data older than LoggingTimeout seconds.
  # Logged data will be used for pose graph optimization or GPS antenna/Lidar sensor calibration using GPS data.
  logging_timeout: 0.  # [s]

  max_distance_for_ICP_matching: 20.            # [m] Max distance allowed between two keypoints during ICP matching.

  ego_motion_LM_max_iter: 15                    # Max number of iteration in the ego motion LM optimization step.
  ego_motion_ICP_max_iter: 4                    # Max number of iterations of ICP matching.
  ego_motion_line_distance_nbr_neighbors: 8
  ego_motion_minimum_line_neighbor_rejection: 3
  ego_motion_line_distance_factor: 5.
  ego_motion_plane_distance_nbr_neighbors: 5
  ego_motion_plane_distance_factor1: 35.
  ego_motion_plane_distance_factor2: 8.
  ego_motion_max_line_distance: 0.2
  ego_motion_max_plane_distance: 0.2
  ego_motion_init_loss_scale: 2.
  ego_motion_final_loss_scale: 0.2

  mapping_LM_max_iter: 15                     # Max number of iteration in the ego motion LM optimization step.
  mapping_ICP_max_iter: 3                     # Max number of iterations of ICP matching.
  mapping_line_distance_nbr_neighbors: 10
  mapping_minimum_line_neighbor_rejection: 4
  mapping_line_distance_factor: 5.
  mapping_plane_distance_nbr_neighbors: 5
  mapping_plane_distance_factor1: 35.
  mapping_plane_distance_factor2: 8.
  mapping_max_line_distance: 0.2
  mapping_max_plane_distance: 0.2
  mapping_line_max_dist_inlier: 0.2
  mapping_init_loss_scale: 0.7
  mapping_final_loss_scale: 0.05

  voxel_grid_leaf_size_edges: 0.45
  voxel_grid_leaf_size_planes: 0.6
  voxel_grid_leaf_size_blobs: 0.12
  voxel_grid_size: 50
  voxel_grid_resolution: 10
